package com.vsu.c2.part1.t4;

/** 同步容器类：
 *      Vector和Hashtable，Collections.synchronizedxxx
 * Created by vsu on 2018/02/06.
 */

/**
 * 1
 * 同步容器类的问题：
 *      同步容器类都是线程安全的，但在某些情况下可能就需要额外的客户端加锁来保护复合操作
 *      容器上常见的符合操作：
*            迭代：反复访问元素，直到遍历完容器中所有元素
 *           跳转：根据指定顺序找到当前元素的下一个元素以及运算条件
 *      同步容器类通过其自身的锁来保护它的每个方法
 */


/**
 * 2
 * 如果不希望在迭代期间对容器加锁，那么一种替代方法就是克隆容器，并在副本上进行迭代
 * 在克隆容器时存在显著的性能开销
 */

/**
 * 3
 * 隐藏迭代器：
 *      虽然加锁可以防止迭代器抛出ConcurrentModificationException,但必须要记住在所有对共享容器进行迭代的地方都需要加锁
 *
 * 正如封装对象的状态有助于维持不变性条件一样，封装对象的同步机制同样有助于确保实施同步策略
 * 容器的hashcode和equals等方法也会间接地执行跌到操作，当容器作为另一个容器的元素或键值时，就会出现这种情况
 */



public class Test1 {
}
