package com.vsu.c2.part1.t2;

/** 对象的共享
 *      加锁机制既可以确保可见性又可以确保原子性，而volatile变量只能确保可见性
 * Created by vsu on 2018/02/04.
 */

/**
 * 可见性
 */

/**
 * 1
 * 失效数据：
 *
 * 2
 * 非原子64位操作：
 *      long，double类型变量，JVM允许将64位的读或写操作分解为两个32位的操作
 *
 * 3
 *  加锁与可见性：
 *      加锁的含义不仅仅局限于互斥行为，还包括内存可见性。为了确保所有线程都能看到共享变量的最新值，所有执行读或写操作的线程都必须在同一个锁上同步
 *
 * 4
 *  volatile变量：
 *      用来确保将变量的更新操作通知到其他线程
 *      从内存可见性角度：写入volatile变量相当于退出同步代码块，读取相当于进入同步代码块
 *      典型用法：检查某个状态标记以判断是否退出循环
 */
public class Test1 {
}
